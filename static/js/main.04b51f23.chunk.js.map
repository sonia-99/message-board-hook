{"version":3,"sources":["components/App/App.js","reportWebVitals.js","index.js"],"names":["Button","styled","button","Page","div","Title","h1","MessageForm","form","NameInput","MessageTextarea","textarea","SubmitButton","MessageList","ErrorMessage","LoadingMessage","MessageContainer","MessageHead","MessageAuthor","MessageTime","MessageBody","MessageDelete","Message","author","time","children","handleDelete","id","onClick","App","useState","messages","setMessages","value","setValue","nickname","setNickname","messageApiError","setMessageApiError","postMessageApiError","setPostMessageApiError","isLoading","setIsLoading","useEffect","fetch","API_ENDPOINT","then","response","json","data","catch","err","message","method","headers","res","console","log","onSubmit","e","preventDefault","body","JSON","stringify","ok","type","onChange","target","rows","onFocus","toString","map","Date","createdAt","toLocaleString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04b51f23.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst API_ENDPOINT = 'https://student-json-api.lidemy.me/comments';\n\nconst Button = styled.button`\n\tborder-radius: 8px;\n\tpadding: 0.5rem 1rem;\n\tfont-size: 0.8rem;\n`;\n\nconst Page = styled.div`\n\twidth: 550px;\n\tmargin: 0 auto;\n`;\nconst Title = styled.h1`color: navy;`;\nconst MessageForm = styled.form``;\nconst NameInput = styled.div`margin-bottom: 8px;`;\nconst MessageTextarea = styled.textarea`\n\tdisplay: block;\n\twidth: 99%;\n`;\nconst SubmitButton = styled(Button)`margin-top: 8px;`;\nconst MessageList = styled.div`margin-top: 16px;`;\nconst ErrorMessage = styled.div`\n\tbackground: pink;\n\tcolor: red;\n\tpadding: 1rem;\n\tmargin: 1rem 0;\n\tborder-radius: 8px;\n\tborder: 1px solid grey;\n`;\nconst LoadingMessage = styled.div`\n\tposition: fixed;\n\twidth: 100vw;\n\theight: 100vh;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\tbackground: rgba(0, 0, 0, 0.5);\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tfont-size: 2rem;\n\tcolor: white;\n\tfont-weight: bold;\n`;\n\nconst MessageContainer = styled.div`\n\tborder: 1px solid grey;\n\tpadding: 8px 16px;\n\tborder-radius: 8px;\n\t& + & {\n\t\tmargin-top: 0.5rem;\n\t}\n`;\nconst MessageHead = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 0.5rem;\n\tborder-bottom: 2px solid rgba(0, 0, 0, 0.5);\n`;\nconst MessageAuthor = styled.div`font-size: 1rem;`;\nconst MessageTime = styled.div``;\nconst MessageBody = styled.div`\n\tfont-size: 0.9rem;\n\tmargin-top: 1rem;\n`;\n\nconst MessageDelete = styled(Button)`\n\tdisplay: block;\n\tmargin: 0.6rem auto;\n\tmargin-right: 10px;\n`;\nfunction Message({ author, time, children, handleDelete, id }) {\n\treturn (\n\t\t<MessageContainer>\n\t\t\t<MessageHead>\n\t\t\t\t<MessageAuthor>{author}</MessageAuthor>\n\t\t\t\t<MessageTime>{time}</MessageTime>\n\t\t\t</MessageHead>\n\t\t\t<MessageBody>{children}</MessageBody>\n\t\t\t<MessageDelete\n\t\t\t\tonClick={() => {\n\t\t\t\t\thandleDelete(id);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tDelete\n\t\t\t</MessageDelete>\n\t\t</MessageContainer>\n\t);\n}\n\nfunction App() {\n\tconst [ messages, setMessages ] = useState([]);\n\tconst [ value, setValue ] = useState('');\n\tconst [ nickname, setNickname ] = useState('');\n\tconst [ messageApiError, setMessageApiError ] = useState(null);\n\tconst [ postMessageApiError, setPostMessageApiError ] = useState(null);\n\tconst [ isLoading, setIsLoading ] = useState(null);\n\n\tconst fetchAllData = () => {\n\t\tfetch(API_ENDPOINT + '?_sort=createdAt&_order=desc')\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetMessages(data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tsetMessageApiError(err.message);\n\t\t\t});\n\t};\n\tuseEffect(\n\t\t() => {\n\t\t\t// get data from api server\n\t\t\tfetchAllData();\n\t\t},\n\t\t[ messages ]\n\t);\n\tconst handleNicknameChange = (e) => {\n\t\tsetNickname(e.target.value);\n\t};\n\tconst handleTextareaChange = (e) => {\n\t\t//wire up state with input value\n\t\tsetValue(e.target.value);\n\t};\n\tconst handleFormSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (isLoading) {\n\t\t\treturn;\n\t\t}\n\t\tsetIsLoading('Loading...');\n\t\t// add new comment to api server\n\t\tfetch('https://student-json-api.lidemy.me/comments', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tnickname: nickname,\n\t\t\t\tbody: value\n\t\t\t})\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log('Added: ', data);\n\t\t\t\tif (data.ok === 0) {\n\t\t\t\t\tsetPostMessageApiError(data.message);\n\t\t\t\t\tsetIsLoading('');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsetValue('');\n\t\t\t\tsetNickname('');\n\t\t\t\tsetIsLoading('');\n\t\t\t});\n\t};\n\tconst handleDelete = (id) => {\n\t\tsetIsLoading('Deleting...');\n\t\t// send delete comment request to api server\n\t\tfetch('https://student-json-api.lidemy.me/comments/' + id, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t}\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log('Deleted: ', data);\n\t\t\t\tsetIsLoading('');\n\t\t\t});\n\t};\n\treturn (\n\t\t<Page>\n\t\t\t<Title>留言板</Title>\n\t\t\t<MessageForm onSubmit={handleFormSubmit}>\n\t\t\t\t<NameInput>\n\t\t\t\t\tNickname: <input type=\"text\" value={nickname} onChange={handleNicknameChange} />\n\t\t\t\t</NameInput>\n\t\t\t\t<MessageTextarea\n\t\t\t\t\trows={5}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={handleTextareaChange}\n\t\t\t\t\tonFocus={() => setPostMessageApiError(null)}\n\t\t\t\t/>\n\t\t\t\t<SubmitButton>送出</SubmitButton>\n\t\t\t</MessageForm>\n\t\t\t<MessageList>\n\t\t\t\t{messageApiError && <ErrorMessage>Something went wrong... {messageApiError.toString()}</ErrorMessage>}\n\t\t\t\t{postMessageApiError && (\n\t\t\t\t\t<ErrorMessage>Something went wrong... {postMessageApiError.toString()}</ErrorMessage>\n\t\t\t\t)}\n\t\t\t\t{isLoading && <LoadingMessage>{isLoading}</LoadingMessage>}\n\n\t\t\t\t{messages &&\n\t\t\t\t\tmessages.map((message) => (\n\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\tkey={message.id}\n\t\t\t\t\t\t\tauthor={message.nickname}\n\t\t\t\t\t\t\ttime={new Date(message.createdAt).toLocaleString()}\n\t\t\t\t\t\t\tid={message.id}\n\t\t\t\t\t\t\thandleDelete={handleDelete}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{message.body}\n\t\t\t\t\t\t</Message>\n\t\t\t\t\t))}\n\t\t\t</MessageList>\n\t\t</Page>\n\t);\n}\nApp.propTypes = {\n\tauthor: PropTypes.string,\n\ttime: PropTypes.string,\n\tchildren: PropTypes.node\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}